# Generated by Django 4.2.4 on 2023-09-29 16:14

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration', models.IntegerField(default=4)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deadlines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sem_reg_deadline', models.DateField()),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Deadlines',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=100)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.department')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=10)),
                ('current', models.BooleanField(default=True)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.faculty')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.stage')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnitRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.stage')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('global_unit', models.BooleanField(default=False)),
                ('stage_name', models.CharField(max_length=100)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.department')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.stage')),
            ],
        ),
        migrations.CreateModel(
            name='SemesterReg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current', models.BooleanField(default=False)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.stage')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResultSlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kcse_result_slip', models.FileField(upload_to='Pdf/KCSEResultSlips')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_points', models.IntegerField(default=0)),
                ('exam_mark', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(0)])),
                ('cat_mark', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(0)])),
                ('admin_approved', models.BooleanField(default=False)),
                ('dean_approved', models.BooleanField(default=False)),
                ('hod_approved', models.BooleanField(default=False)),
                ('current', models.BooleanField(default=True)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.stage')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.unit')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.year')),
            ],
            options={
                'verbose_name_plural': 'Results',
            },
        ),
        migrations.CreateModel(
            name='RegistrationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('evaluated', models.BooleanField(default=False)),
                ('resit', models.BooleanField(default=False)),
                ('supplementary', models.BooleanField(default=False)),
                ('registration_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.unitregistration')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.unit')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressed_to', models.CharField(choices=[('FINANCE', 'FINANCE'), ('HOD', 'HOD'), ('ADMIN', 'ADMIN'), ('DEAN', 'DEAN'), ('STUDENT', 'STUDENT'), ('LEC', 'LEC')], default='STUDENT', max_length=100)),
                ('notice_title', models.CharField(max_length=100)),
                ('notice', ckeditor_uploader.fields.RichTextUploadingField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('written_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LecturerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotes_critical_thinking', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('ties_in_primary_objectives_of_the_course', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('explains_concepts_clearly', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('uses_concrete_examples_of_concepts', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('gives_multiple_examples', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('points_out_practical_applications', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('stresses_important_concepts', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('repeats_difficult_ideas', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('encourages_questions_and_comments', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('answers_questions_clearly', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('available_to_students_after_class', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('asks_questions_of_class', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('facilitates_discussions_during_lecture', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('proceeds_at_good_pace_for_topic', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('stays_on_theme_of_lecture', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('states_lecture_objectives', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('gives_preliminary_overview_of_lecture', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('signals_transition_to_new_topic', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('explains_how_each_topic_fits_in', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('projects_confidence', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('speaks_expressively_or_emphatically', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('moves_about_while_lecturing', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('gestures_while_speaking', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('shows_facial_expression', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('uses_humor', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor'), ('Too Much', 'Too Much'), ('Adequate', 'Adequate'), ('Good', 'Good')], max_length=100)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.unit')),
            ],
        ),
        migrations.CreateModel(
            name='KCSEResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('Christian Religious Education', 'Christian Religious Education'), ('Building and Construction', 'Building and Construction'), ('Agriculture', 'Agriculture'), ('Home Science', 'Home Science'), ('Chemistry', 'Chemistry'), ('English', 'English'), ('French', 'French'), ('Biology', 'Biology'), ('Mathematics', 'Mathematics'), ('Drawing and Design', 'Drawing and Design'), ('Physics', 'Physics'), ('Kiswahili', 'Kiswahili'), ('Geography', 'Geography'), ('Computer Studies', 'Computer Studies'), ('Business Studies', 'Business Studies')], max_length=100)),
                ('grade', models.CharField(choices=[('A', 'A'), ('D', 'D'), ('B', 'B'), ('C', 'C'), ('D+', 'D+'), ('A-', 'A-'), ('E', 'E'), ('B-', 'B-'), ('C+', 'C+'), ('D-', 'D-'), ('B+', 'B+'), ('C-', 'C-')], max_length=100)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterSchooltransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=50)),
                ('aggregate', models.CharField(max_length=100)),
                ('status', models.CharField(default='pending', max_length=10)),
                ('kcse_results', models.ManyToManyField(to='Faculty.kcseresults')),
                ('kcse_resultslip', models.ManyToManyField(to='Faculty.resultslip')),
                ('new_programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.faculty'),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Faculty.faculty'),
        ),
    ]
